version: '3.3'

services:
    app-core:
        container_name: app-core
        build:
            context: .
            dockerfile: docker/core/Dockerfile
        depends_on:
            - app-db
        env_file:
            - ./.env
        expose:
            - "${PHP_PORT}"
        volumes:
            - ./:/var/www
            - ./docker/core/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app

    app-db:
        image: mysql:5.7
        container_name: app-db
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
        volumes:
            - .db-data:/var/lib/mysql
            - ./docker/core/mysql/init-mysql.js:/docker-entrypoint-initdb.d/init-mysql-js:ro
        ports:
            - "${DB_PORT}:${DB_MYSQL_CONTAINER_PORT}"
        restart: always
        networks:
            - app

    app-webserver:
        image: nginx:1.17
        container_name: app-webserver
        restart: unless-stopped
        ports:
            - "${CORE_NGINX_PORT}:${CONTAINER_NGINX_PORT}"
        volumes:
            - ./:/var/www
            - ./docker/core/conf.d:/etc/nginx/conf.d
        links:
            - app-core
        depends_on:
            - app-core
        networks:
            app:
                aliases:
                    - app.loc
    ngrok:
        image: wernight/ngrok
        depends_on:
            - app-core
        environment:
            - NGROK_AUTHTOKEN=${NGROK_AUTH_TOKEN}
        ports:
            - "${NGROK_PORT}:${NGROK_CONTAINER_PORT}"
        command: ngrok http app-webserver:${CONTAINER_NGINX_PORT}
        networks:
            - app
networks:
    app:
        driver: bridge
